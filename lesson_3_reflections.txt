When would you want to use a remote repository rather than keeping all your work local?
When working on a team (collaborative project) or contributing to an open source project; you can push commits to the master branch to see if they get approved by the "master admin" to be synced to the primary (branch) "master string of commits"

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
You may be making amendments to code that is part of a master project with many contributors; and if you consistently sync with them; their work might deviate/interrupt/not coincide with yours causing unforseeable errors. If you choose when to pull; you can work on local projects that cannot interfere with new files potentially introduced with new amendments on github from other users.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
Forks are copied from another persons github to your github. from there you can clone the repo to your local machine. clones can be cloned directly from another machine, or a url and are repo that are copied directly to a local machine but not necessarily present on github.  Branches are commit logic streams distended and running paralell to the master branch. If desired and logical given the context of the development goals, they can be merged with the master branch

What is the benefit of having a copy of the last known state of the remote stored locally?
If other contributors make amendments to what is stored on the cloud are not working on the specific branch you are engaged with, keeping things automatically up to date/synced might overwrite the amendments that you made thus setting you back. If you are not connected to the interwebz "on a plane", and still want to make amendments; you can do so on the local system and the only way to access the code present in the cloud w/o interwebz access is through the local code stores; hence why its existence is imperative to both reference, rewrite, and actively amend